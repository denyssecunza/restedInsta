[{"/Users/jolizbethbonilla/Desktop/Fellowship Projects/restedInsta/client/src/index.js":"1","/Users/jolizbethbonilla/Desktop/Fellowship Projects/restedInsta/client/src/reportWebVitals.js":"2","/Users/jolizbethbonilla/Desktop/Fellowship Projects/restedInsta/client/src/App.js":"3","/Users/jolizbethbonilla/Desktop/Fellowship Projects/restedInsta/client/src/Components/UserPost.js":"4","/Users/jolizbethbonilla/Desktop/Fellowship Projects/restedInsta/client/src/Components/Dashboard.js":"5","/Users/jolizbethbonilla/Desktop/Fellowship Projects/restedInsta/client/src/Components/AllPosts.js":"6"},{"size":500,"mtime":1616711435282,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1616711435284,"results":"9","hashOfConfig":"8"},{"size":546,"mtime":1616882717719,"results":"10","hashOfConfig":"8"},{"size":2000,"mtime":1616884900485,"results":"11","hashOfConfig":"8"},{"size":1351,"mtime":1616883359154,"results":"12","hashOfConfig":"8"},{"size":750,"mtime":1616882717720,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"kj0l06",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/jolizbethbonilla/Desktop/Fellowship Projects/restedInsta/client/src/index.js",[],["29","30"],"/Users/jolizbethbonilla/Desktop/Fellowship Projects/restedInsta/client/src/reportWebVitals.js",[],"/Users/jolizbethbonilla/Desktop/Fellowship Projects/restedInsta/client/src/App.js",[],"/Users/jolizbethbonilla/Desktop/Fellowship Projects/restedInsta/client/src/Components/UserPost.js",["31","32","33"],"/Users/jolizbethbonilla/Desktop/Fellowship Projects/restedInsta/client/src/Components/Dashboard.js",["34","35"],"import React from \"react\";\nimport AllPosts from \"./AllPosts\";\n\nfunction Dashboard() {\n  const [state, setState] = React.useState([]);\n  // state = {\n  //   currentUser: {\n  //     id: \"\",\n  //     username: \"\",\n  //   },\n  //   photos: [],\n  // };\n\n  React.useEffect(() => {\n    let isCurrent = true;\n    fetch(\"http://localhost:3000/users\")\n      .then((resp) => resp.json())\n      .then((data) => {\n        data.map((user) => {\n          setState([\n            {\n              id: user.user_id,\n              username: user.username,\n            },\n          ]);\n        });\n      });\n    fetch(`http://localhost:3000/photos`)\n      .then((resp) => resp.json())\n      .then((photos) => {\n        console.log(photos);\n        setState({ photos: photos });\n      });\n    return () => {\n      isCurrent = false;\n    };\n  }, [state]);\n\n  return (\n    <div>\n      <section className=\"section\">\n        <div className=\"container box content\">\n          <div className=\"columns\">\n            <div className=\"column is-full has-background-white\">\n              <h1 className=\"has-text-centered is-size-3 has-text-weight-bold\">\n                Dashboard\n              </h1>\n              <AllPosts user={state.username} photos={state.photos} />\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","/Users/jolizbethbonilla/Desktop/Fellowship Projects/restedInsta/client/src/Components/AllPosts.js",["36"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction AllPosts(props) {\n  const renderPosts = () => {\n    // photos from state array in dashboard\n    return props.photos.map((photo) => {\n      return (\n        <div key={photo.id}>\n          <Link\n            className=\"is-size-4 has-text-weight-bold has-text-primary\"\n            to={{ pathname: `/photos/` }}\n          >\n            {photo.caption}\n          </Link>\n          <p className=\"is-size-7 has-text-weight-light\">By {photo.username}</p>\n          <img href={photo.image}></img>\n          <p>{photo.likes}</p>\n          <p>{photo.comments}</p>\n          <hr />\n        </div>\n      );\n    });\n  };\n\n  return <div>{renderPosts()}</div>;\n}\n\nexport default AllPosts;\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":11,"column":28,"nodeType":"43","messageId":"44","endLine":11,"endColumn":30},{"ruleId":"41","severity":1,"message":"42","line":31,"column":38,"nodeType":"43","messageId":"44","endLine":31,"endColumn":40},{"ruleId":"45","severity":1,"message":"46","line":44,"column":7,"nodeType":"47","messageId":"48","endLine":44,"endColumn":16},{"ruleId":"41","severity":1,"message":"42","line":19,"column":25,"nodeType":"43","messageId":"44","endLine":19,"endColumn":27},{"ruleId":"45","severity":1,"message":"46","line":35,"column":7,"nodeType":"47","messageId":"48","endLine":35,"endColumn":16},{"ruleId":"49","severity":1,"message":"50","line":17,"column":11,"nodeType":"51","endLine":17,"endColumn":35},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'isCurrent' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]