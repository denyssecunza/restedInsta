{"ast":null,"code":"var _jsxFileName = \"/Users/jolizbethbonilla/Desktop/Fellowship Projects/restedInsta/client/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null\n    };\n\n    this.callBackendAPI = () => {\n      fetch(\"http://localhost:3000/\").then(res => {\n        console.log(res);\n        return res.json();\n      }).then(data => {\n        const user = data.username;\n        return user;\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI(); // .then((res) => this.setState({ data: res.express }))\n    // .catch((err) => console.log(err));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  // callBackendAPI = async () => {\n  //   const response = await fetch(\"/starter_route\");\n  //   const body = await response.json();\n  //   if (response.status !== 200) {\n  //     throw Error(body.message);\n  //   }\n  //   return body;\n  // };\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"App-intro\",\n        children: this.state.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jolizbethbonilla/Desktop/Fellowship Projects/restedInsta/client/src/App.js"],"names":["React","App","Component","state","data","callBackendAPI","fetch","then","res","console","log","json","user","username","catch","err","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,IAAI,EAAE;AADA,KADwB;;AAAA,SAYhCC,cAZgC,GAYf,MAAM;AACrBC,MAAAA,KAAK,CAAC,wBAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAAS;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,eAAOA,GAAG,CAACG,IAAJ,EAAP;AACD,OAJH,EAKGJ,IALH,CAKSH,IAAD,IAAU;AACd,cAAMQ,IAAI,GAAGR,IAAI,CAACS,QAAlB;AACA,eAAOD,IAAP;AACD,OARH,EASGE,KATH,CASUC,GAAD,IAAS;AACdN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD,OAXH;AAYD,KAzB+B;AAAA;;AAKhCC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKX,cAAL,GAFkB,CAGlB;AACA;AACD,GAV+B,CAWhC;;;AAgBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEAY,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBAA0B,KAAKd,KAAL,CAAWC;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA3C+B;;AA8ClC,eAAeH,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    data: null,\n  };\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI();\n    // .then((res) => this.setState({ data: res.express }))\n    // .catch((err) => console.log(err));\n  }\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = () => {\n    fetch(\"http://localhost:3000/\")\n      .then((res) => {\n        console.log(res);\n        return res.json();\n      })\n      .then((data) => {\n        const user = data.username;\n        return user;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // callBackendAPI = async () => {\n  //   const response = await fetch(\"/starter_route\");\n  //   const body = await response.json();\n\n  //   if (response.status !== 200) {\n  //     throw Error(body.message);\n  //   }\n  //   return body;\n  // };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App-intro\">{this.state.data}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}